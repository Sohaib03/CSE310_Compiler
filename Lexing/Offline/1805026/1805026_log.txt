Line no 1: Token <INT> Lexeme int found

Line no 1: Token <ID> Lexeme main found

Inserted in ScopeTable# 1 at position 5, 0
ScopeTable # 1
5 --> < main : ID > 
Line no 1: Token <LPAREN> Lexeme ( found

Line no 1: Token <RPAREN> Lexeme ) found

Line no 1: Token <LCURL> Lexeme { found

New ScopeTable with id 1.1 created
Line no 3: Token <CHAR> Lexeme char found

Line no 3: Token <ID> Lexeme str1 found

Inserted in ScopeTable# 1.1 at position 2, 0
ScopeTable # 1.1
2 --> < str1 : ID > 
ScopeTable # 1
5 --> < main : ID > 
Line no 3: Token <LTHIRD> Lexeme [ found

Line no 3: Token <CONST_INT> Lexeme 100 found

Inserted in ScopeTable# 1.1 at position 4, 0
ScopeTable # 1.1
2 --> < str1 : ID > 
4 --> < 100 : CONST_INT > 
ScopeTable # 1
5 --> < main : ID > 
Line no 3: Token <RTHIRD> Lexeme ] found

Line no 3: Token <ASSIGNOP> Lexeme = found

Line no 3: Token <STRING> Lexeme "I own a dog." found --> <STRING, "I own a dog.">

Line no 3: Token <SEMICOLON> Lexeme ; found

Line no 4: Token <CHAR> Lexeme char found

Line no 4: Token <ID> Lexeme str2 found

Inserted in ScopeTable# 1.1 at position 3, 0
ScopeTable # 1.1
2 --> < str1 : ID > 
3 --> < str2 : ID > 
4 --> < 100 : CONST_INT > 
ScopeTable # 1
5 --> < main : ID > 
Line no 4: Token <LTHIRD> Lexeme [ found

Line no 4: Token <CONST_INT> Lexeme 100 found

< 100,CONST_INT > already exists in current ScopeTable
Line no 4: Token <RTHIRD> Lexeme ] found

Line no 4: Token <ASSIGNOP> Lexeme = found

Line no 4: Token <STRING> Lexeme "I own a dog.\
    His name is Jack." found --> <STRING, "I own a dog.    His name is Jack.">

Line no 5: Token <SEMICOLON> Lexeme ; found

Line no 6: Token <CHAR> Lexeme char found

Line no 6: Token <ID> Lexeme str3 found

Inserted in ScopeTable# 1.1 at position 4, 1
ScopeTable # 1.1
2 --> < str1 : ID > 
3 --> < str2 : ID > 
4 --> < 100 : CONST_INT > < str3 : ID > 
ScopeTable # 1
5 --> < main : ID > 
Line no 6: Token <LTHIRD> Lexeme [ found

Line no 6: Token <CONST_INT> Lexeme 100 found

< 100,CONST_INT > already exists in current ScopeTable
Line no 6: Token <RTHIRD> Lexeme ] found

Line no 6: Token <ASSIGNOP> Lexeme = found

Line no 6: Token <STRING> Lexeme "He said, \" I own a dog\"\
    so I asked, \"What is his name?\"" found --> <STRING, "He said, " I own a dog"    so I asked, "What is his name?"">

Line no 7: Token <SEMICOLON> Lexeme ; found

Line no 9: Token <COMMENT> Lexeme //This is a single line comment. found

Line no 11: Token <COMMENT> Lexeme //This is also a\
    single line comment. found

Line no 13: Token <COMMENT> Lexeme //This is also a /*Multi-line just for\
    fun */ single line comment. found

Line no 14: Token <COMMENT> Lexeme //This is another single line comment\  found

Line no 15: Token <CHAR> Lexeme char found

Line no 15: Token <ID> Lexeme str4 found

Inserted in ScopeTable# 1.1 at position 5, 0
ScopeTable # 1.1
2 --> < str1 : ID > 
3 --> < str2 : ID > 
4 --> < 100 : CONST_INT > < str3 : ID > 
5 --> < str4 : ID > 
ScopeTable # 1
5 --> < main : ID > 
Line no 15: Token <LTHIRD> Lexeme [ found

Line no 15: Token <CONST_INT> Lexeme 100 found

< 100,CONST_INT > already exists in current ScopeTable
Line no 15: Token <RTHIRD> Lexeme ] found

Line no 15: Token <ASSIGNOP> Lexeme = found

Line no 15: Token <STRING> Lexeme "But this line is valid." found --> <STRING, "But this line is valid.">

Line no 15: Token <SEMICOLON> Lexeme ; found

Line no 16: Token <COMMENT> Lexeme //This is another /*Multi-line again\  found

Line no 17: Token <CHAR> Lexeme char found

Line no 17: Token <ID> Lexeme str5 found

Inserted in ScopeTable# 1.1 at position 6, 0
ScopeTable # 1.1
2 --> < str1 : ID > 
3 --> < str2 : ID > 
4 --> < 100 : CONST_INT > < str3 : ID > 
5 --> < str4 : ID > 
6 --> < str5 : ID > 
ScopeTable # 1
5 --> < main : ID > 
Line no 17: Token <LTHIRD> Lexeme [ found

Line no 17: Token <CONST_INT> Lexeme 100 found

< 100,CONST_INT > already exists in current ScopeTable
Line no 17: Token <RTHIRD> Lexeme ] found

Line no 17: Token <ASSIGNOP> Lexeme = found

Line no 17: Token <STRING> Lexeme "This line is also valid." found --> <STRING, "This line is also valid.">

Line no 17: Token <SEMICOLON> Lexeme ; found

Line no 18: Token <COMMENT> Lexeme //Tony said, \"This is still easy.\" found

Line no 19: Token <CHAR> Lexeme char found

Line no 19: Token <ID> Lexeme str6 found

Inserted in ScopeTable# 1.1 at position 0, 0
ScopeTable # 1.1
0 --> < str6 : ID > 
2 --> < str1 : ID > 
3 --> < str2 : ID > 
4 --> < 100 : CONST_INT > < str3 : ID > 
5 --> < str4 : ID > 
6 --> < str5 : ID > 
ScopeTable # 1
5 --> < main : ID > 
Line no 19: Token <LTHIRD> Lexeme [ found

Line no 19: Token <CONST_INT> Lexeme 100 found

< 100,CONST_INT > already exists in current ScopeTable
Line no 19: Token <RTHIRD> Lexeme ] found

Line no 19: Token <ASSIGNOP> Lexeme = found

Line no 19: Token <STRING> Lexeme "Really Tony?" found --> <STRING, "Really Tony?">

Line no 19: Token <SEMICOLON> Lexeme ; found

Line no 22: Token <RETURN> Lexeme return found

Line no 22: Token <CONST_INT> Lexeme 0 found

Inserted in ScopeTable# 1.1 at position 6, 1
ScopeTable # 1.1
0 --> < str6 : ID > 
2 --> < str1 : ID > 
3 --> < str2 : ID > 
4 --> < 100 : CONST_INT > < str3 : ID > 
5 --> < str4 : ID > 
6 --> < str5 : ID > < 0 : CONST_INT > 
ScopeTable # 1
5 --> < main : ID > 
Line no 22: Token <SEMICOLON> Lexeme ; found

Line no 25: Token <RCURL> Lexeme } found

ScopeTable with id 1.1 removed
ScopeTable # 1
5 --> < main : ID > 
Total Line Count : 26
Total Error Count : 0
